exit
current_user.following_users.create({following_id: params[:user_id]})exit
current_user.followings
User.find(3).followers
current_user.following_users.create({following_id: params[:user_id]})
exit
current_user.followings.create({follower_id: params[:user_id]})
current_user.followings
current_user.followins
th
User.find(3).followers
current_user.followings
current_user.following_users.create({following_id: params[:user_id]})
current_user.followings
current_user.followings.create({follower_id: params[:user_id]})
current_user.followings.create({following_id: params[:user_id]})
params[:user_id]
continue
exit
!new_img.nil?
new_img.nil?
new_img?
exit
prof_pic_changed?
exit
prof_pic_changed?
:prof_pic_changed?
prof_pic_changed?
continue
prof_pic_changed?
:prof_pic_changed?
exit
if params[:prof_pic] puts "" end
if params[:prof_pic] puts "yes" end
Boolean
if params[:prof_pic]
params[:prof_pic]
exit
params[:prof_pic]
exit
params[:prof_pic]
exit
prof_pic_changed?
self.prof_pic_changed?
continue
public_id
img_url
exit
@user.prof_pic.url
@user.prof_pic
continue
public_id
img_url
exit
previous_url = self.prof_pic.url
self.prof_pic.url
self.prof_pic
self
@user
@user.prof_pic
continue
public_id
exit
public_id
continue
public_id
exit
previous_url.split('/').last.split('.')[0]
previous_url.split('/').last.split('.')
previous_url.split('/').last
previous_url.split('/')
previous_url
exit
u= self.prof_pic.url
self.@public_id
Cloudinary::Uploader.destroy(p2ykn3zyqniiauhn6tui)
p2ykn3zyqniiauhn6tui
u= self.prof_pic
u[:@public_id]
u= self.prof_pic
prof_pic[:public_id]
@public_id
self.prof_pic
self.prof_pic.url
previous_url
exit
self.prof_pic.url
self.prof_pic_url_was
prof_pic_changed?
continue
@user.tweets.find_by(id: 1).comments
@user.tweets.find_by(id: 2).comments
@user.tweets.find_by(id: 2)
@user.tweets.second.comments
@user.tweets.second
@user.tweets do |twee| puts tweet end
@user.tweets.last.comments
@user.tweets.last
@user.tweets.find(2)
@user.tweets.first
@user.tweets.find(2).comments
@user.tweets.first.comments
exit
@user.tweets.first.comments
@user.tweets.first
@user.tweets
